{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./assets/js/codebox.js","webpack:///./_includes/demos/tabbox.js","webpack:///./_includes/demos/toasts.js","webpack:///./_includes/demos/modals.js","webpack:///./_includes/demos/autocompletes.js","webpack:///./_includes/demos/tooltips.js","webpack:///./_includes/demos/dropdowns.js","webpack:///./assets/js/intlReady.js","webpack:///./node_modules/date-fns/esm/_lib/cloneObject/index.js","webpack:///./node_modules/date-fns/esm/_lib/assign/index.js","webpack:///./node_modules/date-fns/esm/_lib/requiredArgs/index.js","webpack:///./node_modules/date-fns/esm/toDate/index.js","webpack:///./node_modules/date-fns/esm/isValid/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","webpack:///./node_modules/date-fns/esm/_lib/toInteger/index.js","webpack:///./node_modules/date-fns/esm/addMilliseconds/index.js","webpack:///./node_modules/date-fns/esm/subMilliseconds/index.js","webpack:///./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","webpack:///./node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/format/formatters/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/format/longFormatters/index.js","webpack:///./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","webpack:///./node_modules/date-fns/esm/_lib/protectedTokens/index.js","webpack:///./node_modules/date-fns/esm/format/index.js","webpack:///./node_modules/date-fns-tz/esm/_lib/tzTokenizeDate/index.js","webpack:///./node_modules/date-fns-tz/esm/_lib/tzParseTimezone/index.js","webpack:///./node_modules/date-fns-tz/esm/toDate/index.js","webpack:///./node_modules/date-fns-tz/esm/zonedTimeToUtc/index.js","webpack:///./_includes/demos/datepickers.js","webpack:///./assets/js/default.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","installedModules","0","__webpack_require__","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","p","jsonpScriptSrc","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","s","beyond","Codebox","dom","this","currentIndex","init","tabs","classList","remove","transform","panesBox","style","height","panes","offsetHeight","querySelectorAll","querySelector","forEach","a","_handleTabClick","removeCurrentClass","add","setBoxHeight","addEventListener","firstTab","addEvents","_handleWindowResize","removeEventListener","Tabbox","names","actions","toast","Toast","btn","getElementById","clickedCount","index","parseInt","Math","random","send","btnText","btnCb","res","clear","Modal","confirm","log","cancel","Autocomplete","rows","prefix","title","getData","keyword","filter","upperKeyword","toUpperCase","upperTitle","includes","itemClick","row","Tooltip","Dropdown","polyfillTimezone","Intl","DateTimeFormat","timeZone","format","require","cloneObject","dirtyObject","TypeError","requiredArgs","required","args","toDate","argument","arguments","argStr","toString","Date","getTime","warn","stack","NaN","isValid","dirtyDate","date","isNaN","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","dirtyOptions","options","width","String","defaultWidth","formats","formatLong","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","dirtyIndex","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","buildMatchFn","dirtyString","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","array","predicate","findIndex","pattern","test","findKey","valueCallback","rest","code","formatDistance","token","count","result","replace","addSuffix","comparison","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","dirtyNumber","_dirtyOptions","number","Number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseResult","any","weekStartsOn","firstWeekContainsDate","toInteger","ceil","floor","addMilliseconds","dirtyAmount","timestamp","amount","subMilliseconds","addLeadingZeros","targetLength","sign","output","abs","y","signedYear","getUTCFullYear","year","M","getUTCMonth","getUTCDate","dayPeriodEnumValue","getUTCHours","h","H","getUTCMinutes","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","pow","startOfUTCISOWeek","getUTCDay","diff","setUTCDate","setUTCHours","getUTCISOWeekYear","fourthOfJanuaryOfNextYear","setUTCFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfUTCISOWeekYear","fourthOfJanuary","startOfUTCWeek","locale","localeWeekStartsOn","defaultWeekStartsOn","RangeError","getUTCWeekYear","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfUTCWeekYear","firstWeek","dayPeriodEnum","formatTimezoneShort","offset","dirtyDelimiter","absOffset","hours","minutes","delimiter","formatTimezoneWithOptionalMinutes","formatTimezone","G","unit","lightFormatters","Y","signedWeekYear","weekYear","R","u","Q","q","L","w","week","round","getUTCWeek","I","isoWeek","getUTCISOWeek","D","dayOfYear","setUTCMonth","startOfYearTimestamp","difference","getUTCDayOfYear","E","dayOfWeek","localDayOfWeek","isoDayOfWeek","b","B","K","k","X","_localize","timezoneOffset","_originalDate","getTimezoneOffset","x","O","z","originalDate","T","dateLongFormatter","timeLongFormatter","P","dateTimeFormat","datePattern","timePattern","getTimezoneOffsetInMilliseconds","baseTimezoneOffset","setSeconds","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","indexOf","isProtectedWeekYearToken","throwProtectedError","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","cleanEscapedString","input","tzTokenizeDate","dtf","dtfCache","hour12","hour","minute","second","getDateTimeFormat","formatToParts","formatted","filled","pos","typeToPos","partsOffset","parsed","exec","hackyOffset","patterns","timezone","timezoneZ","timezoneHH","timezoneHHMM","timezoneIANA","tzParseTimezone","timezoneString","absoluteOffset","validateTimezone","tokens","UTC","dateTimeDelimeter","plainTime","timeZoneDelimeter","YY","YYY","YYYY","YYYYY","MM","DDD","MMDD","Www","WwwD","HH","HHMM","HHMMSS","splitDateString","dateString","timeString","dateStrings","split","substr","parseYear","additionalDigits","patternYYY","patternYYYYY","yearString","restDateString","centuryString","parseDate","validateDate","isLeapYear","isLeapYearIndex","validateDayOfYearDate","validateWeekDate","dayOfISOWeekYear","parseTime","validateTime","parseFloat","seconds","isoWeekYear","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","zonedTimeToUtc","dirtyFormatStr","formatStr","utcDate","formatterOptions","map","substring","firstCharacter","longFormatter","join","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","extendedOptions","parseYearResult","Datepicker","then","startDate","endDate","Sidebar"],"mappings":"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","file":"web.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t};\n\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + chunkId + \".web.js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/beyond/dist/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","(function(beyond) {\n  class Codebox {\n\n    constructor(dom) {\n      this.dom = dom\n      this.currentIndex = 0\n      this.init()\n    }\n\n    removeCurrentClass() {\n      if (this.currentIndex !== null) {\n        this.tabs[this.currentIndex].classList.remove('js-active')\n      }\n    }\n\n    setBoxHeight() {\n      const i = this.currentIndex\n      const transform = (i === 0) ? 'none' : `translateX(-${i * 100}%)`\n      this.panesBox.style.transform = transform\n      this.panesBox.style.height = this.panes[i].offsetHeight + 'px'\n    }\n\n    init() {\n      this.tabs = this.dom.querySelectorAll('[data-tabs] > a')\n      this.panes = this.dom.querySelectorAll('[data-panes] > div')\n      this.panesBox = this.dom.querySelector('[data-panes]')\n      this.tabs.forEach((a, i) => {\n        a._handleTabClick = () => {\n          this.removeCurrentClass()\n          this.currentIndex = i\n          a.classList.add('js-active')\n          this.setBoxHeight()\n        }\n        a.addEventListener('click', a._handleTabClick, false)\n      })\n\n      const [firstTab] = this.tabs\n      if (firstTab) {\n        firstTab.classList.add('js-active')\n      }\n      this.setBoxHeight()\n      this.addEvents()\n    }\n\n    addEvents() {\n      this._handleWindowResize = () => this.setBoxHeight()\n      window.addEventListener('resize', this._handleWindowResize, false)\n    }\n\n    destroy() {\n      window.removeEventListener('resize', this._handleWindowResize, false)\n    }\n  }\n  beyond.Codebox = Codebox\n})(window.beyond = window.beyond || {});\n","const { Tabbox } = window.beyond\n\ndocument.querySelectorAll('[data-tabbox]')\n  .forEach(dom => new Tabbox(dom))\n","(function() {\n  const names = ['路人甲', '路人乙', '路人丙']\n  const actions = ['吃了一個漢堡', '跌了一跤', '說: 你當台灣人是塑膠做的喔 ! 不要欺負我們台灣人']\n\n  const { Toast } = window.beyond\n  const toast = new Toast()\n  const btn = document.getElementById('btn-toast')\n\n  if (! btn ) {\n    return\n  }\n\n  let clickedCount = 0\n\n  btn.addEventListener('click', () => {\n\n    const num = parseInt(Math.random() * 10, 10) + 1\n    const index = num % names.length\n\n    toast.send({\n      message: `${++clickedCount}. ${names[index]}${actions[index]}`,\n      btnText: '取消',\n      btnCb(res) {\n        res.clear()\n      }\n    })\n  }, false)\n})()\n","const { Modal } = window.beyond\n\ndocument.querySelectorAll('[data-modal-opener]').forEach(dom => {\n  new Modal(dom, {\n    confirm() {\n      console.log('confirmed')\n    },\n    cancel(type) {\n      console.log('cancelled', type)\n    }\n  })\n})\n","(function() {\n  const { Autocomplete } = window.beyond\n\n  const rows = [\n    { prefix: 'SP', title: '🔥SHARE.CO🔥經典香水吊卡 ➜ 糖果茉莉, 奇蹟罌粟, 能量麝香, 甜蜜莉莉' },\n    { prefix: 'SPY', title: '🔥SHARE.CO🔥經典粉絲限定 VIP 方案' },\n    { prefix: 'SW', title: '素TEE / 內褲 / 平口褲 ➜ 版型專為亞洲人身形設計' }\n  ]\n\n  const dom = document.querySelector('[data-autocomplete]')\n\n  if (! dom) {\n    return\n  }\n\n  new Autocomplete(dom, {\n\n    async getData({ keyword }) {\n      return rows.filter(({ prefix, title }) => {\n\n        const upperKeyword = keyword.toUpperCase()\n        const upperTitle = title.toUpperCase()\n        const upperPrefix = prefix.toUpperCase()\n\n        return upperPrefix.includes(upperKeyword) || upperTitle.includes(upperKeyword)\n      })\n    },\n    itemClick(row) {\n      return row.prefix\n    }\n  })\n})()\n","const { Tooltip } = window.beyond\n\ndocument.querySelectorAll('[data-tooltip]')\n  .forEach(dom => new Tooltip(dom))\n","const { Dropdown } = window.beyond\n\ndocument.querySelectorAll('[data-dropdown]')\n  .forEach(dom => new Dropdown(dom))\n","function polyfillIntl() {\n  return new Promise(resolve => {\n    if (typeof Intl === 'undefined') {\n      require.ensure([\n        'intl',\n        'intl/locale-data/jsonp/en.js'\n      ], require => {\n        require('intl')\n        require('intl/locale-data/jsonp/en.js');\n        resolve()\n      })\n    }\n    else {\n      resolve()\n    }\n  })\n}\n\nfunction polyfillTimezone() {\n  return new Promise(resolve => {\n    try {\n      new Intl.DateTimeFormat('en', {\n        timeZone: 'Asia/Taipei'\n      }).format()\n      resolve()\n    }\n    catch (err) {\n      require.ensure(['date-time-format-timezone'], require => {\n        require('date-time-format-timezone')\n        resolve()\n      }, 'DateTimeFormatTimezone')\n    }\n  })\n}\n\nexport default function intlReady() {\n  return polyfillIntl()\n    .then(polyfillTimezone)\n}\n","import assign from '../assign/index.js';\nexport default function cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (dirtyObject.hasOwnProperty(property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + required > 1 ? 's' : '' + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * var result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return !isNaN(date);\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n}","export default function buildFormatLongFn(args) {\n  return function (dirtyOptions) {\n    var options = dirtyOptions || {};\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from '../../../_lib/buildFormatLongFn/index.js';\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nexport default function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n}","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    return valuesArray[index];\n  };\n}","export default function buildMatchFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var value;\n\n    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {\n      value = findIndex(parsePatterns, function (pattern) {\n        return pattern.test(string);\n      });\n    } else {\n      value = findKey(parsePatterns, function (pattern) {\n        return pattern.test(string);\n      });\n    }\n\n    value = args.valueCallback ? args.valueCallback(value) : value;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n}","import buildMatchPatternFn from '../../../_lib/buildMatchPatternFn/index.js';\nimport buildMatchFn from '../../../_lib/buildMatchFn/index.js';\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","export default function buildMatchPatternFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var matchResult = string.match(args.matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n\n    if (!parseResult) {\n      return null;\n    }\n\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}","import formatDistance from './_lib/formatDistance/index.js';\nimport formatLong from './_lib/formatLong/index.js';\nimport formatRelative from './_lib/formatRelative/index.js';\nimport localize from './_lib/localize/index.js';\nimport match from './_lib/match/index.js';\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildLocalizeFn from '../../../_lib/buildLocalizeFn/index.js';\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n\n};\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber, _dirtyOptions) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`:\n  //\n  //   var options = dirtyOptions || {}\n  //   var unit = String(options.unit)\n  //\n  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from '../../addLeadingZeros/index.js';\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from '../getUTCISOWeekYear/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toInteger from '../toInteger/index.js';\nimport getUTCWeekYear from '../getUTCWeekYear/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import lightFormatters from '../lightFormatters/index.js';\nimport getUTCDayOfYear from '../../../_lib/getUTCDayOfYear/index.js';\nimport getUTCISOWeek from '../../../_lib/getUTCISOWeek/index.js';\nimport getUTCISOWeekYear from '../../../_lib/getUTCISOWeekYear/index.js';\nimport getUTCWeek from '../../../_lib/getUTCWeek/index.js';\nimport getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport addLeadingZeros from '../../addLeadingZeros/index.js';\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n  /*\n   * |     | Unit                           |     | Unit                           |\n   * |-----|--------------------------------|-----|--------------------------------|\n   * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n   * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n   * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n   * |  d  | Day of month                   |  D  | Day of year                    |\n   * |  e  | Local day of week              |  E  | Day of week                    |\n   * |  f  |                                |  F* | Day of week in month           |\n   * |  g* | Modified Julian day            |  G  | Era                            |\n   * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n   * |  i! | ISO day of week                |  I! | ISO week of year               |\n   * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n   * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n   * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n   * |  m  | Minute                         |  M  | Month                          |\n   * |  n  |                                |  N  |                                |\n   * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n   * |  p! | Long localized time            |  P! | Long localized date            |\n   * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n   * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n   * |  s  | Second                         |  S  | Fraction of second             |\n   * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n   * |  u  | Extended year                  |  U* | Cyclic year                    |\n   * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n   * |  w  | Local week of year             |  W* | Week of month                  |\n   * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n   * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n   * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n   *\n   * Letters marked by * are not implemented but reserved by Unicode standard.\n   *\n   * Letters marked by ! are non-standard, but implemented by date-fns:\n   * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n   * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n   *   i.e. 7 for Sunday, 1 for Monday, etc.\n   * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n   * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n   *   `R` is supposed to be used in conjunction with `I` and `i`\n   *   for universal ISO week-numbering date, whereas\n   *   `Y` is supposed to be used in conjunction with `w` and `e`\n   *   for week-numbering date specific to the locale.\n   * - `P` is long localized date format\n   * - `p` is long localized time format\n   */\n\n};\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","import toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport startOfUTCWeekYear from '../startOfUTCWeekYear/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport startOfUTCISOWeekYear from '../startOfUTCISOWeekYear/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","var MILLISECONDS_IN_MINUTE = 60000;\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\n\nexport default function getTimezoneOffsetInMilliseconds(dirtyDate) {\n  var date = new Date(dirtyDate.getTime());\n  var baseTimezoneOffset = Math.ceil(date.getTimezoneOffset());\n  date.setSeconds(0, 0);\n  var millisecondsPartOfTimezoneOffset = date.getTime() % MILLISECONDS_IN_MINUTE;\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;\n}","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token) {\n  if (token === 'YYYY') {\n    throw new RangeError('Use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr');\n  } else if (token === 'YY') {\n    throw new RangeError('Use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr');\n  } else if (token === 'D') {\n    throw new RangeError('Use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr');\n  } else if (token === 'DD') {\n    throw new RangeError('Use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr');\n  }\n}","import isValid from '../isValid/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport formatters from '../_lib/format/formatters/index.js';\nimport longFormatters from '../_lib/format/longFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from '../_lib/protectedTokens/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js'; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Su            | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aaa  | AM, PM                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 1, 2, ..., 11, 0                  |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 0001, ..., 999               |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 05/29/1453                        | 7     |\n * |                                 | PP      | May 29, 1453                      | 7     |\n * |                                 | PPP     | May 29th, 1453                    | 7     |\n * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |\n * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","/**\n * Returns the [year, month, day, hour, minute, seconds] tokens of the provided\n * `date` as it will be rendered in the `timeZone`.\n */\nexport default function tzTokenizeDate(date, timeZone) {\n  var dtf = getDateTimeFormat(timeZone)\n  return dtf.formatToParts ? partsOffset(dtf, date) : hackyOffset(dtf, date)\n}\n\nvar typeToPos = {\n  year: 0,\n  month: 1,\n  day: 2,\n  hour: 3,\n  minute: 4,\n  second: 5\n}\n\nfunction partsOffset(dtf, date) {\n  var formatted = dtf.formatToParts(date)\n  var filled = []\n  for (var i = 0; i < formatted.length; i++) {\n    var pos = typeToPos[formatted[i].type]\n\n    if (pos >= 0) {\n      filled[pos] = parseInt(formatted[i].value, 10)\n    }\n  }\n  return filled\n}\n\nfunction hackyOffset(dtf, date) {\n  var formatted = dtf.format(date).replace(/\\u200E/g, '')\n  var parsed = /(\\d+)\\/(\\d+)\\/(\\d+),? (\\d+):(\\d+):(\\d+)/.exec(formatted)\n  // var [, fMonth, fDay, fYear, fHour, fMinute, fSecond] = parsed\n  // return [fYear, fMonth, fDay, fHour, fMinute, fSecond]\n  return [parsed[3], parsed[1], parsed[2], parsed[4], parsed[5], parsed[6]]\n}\n\n// Get a cached Intl.DateTimeFormat instance for the IANA `timeZone`. This can be used\n// to get deterministic local date/time output according to the `en-US` locale which\n// can be used to extract local time parts as necessary.\nvar dtfCache = {}\nfunction getDateTimeFormat(timeZone) {\n  if (!dtfCache[timeZone]) {\n    dtfCache[timeZone] = new Intl.DateTimeFormat('en-US', {\n      hour12: false,\n      timeZone: timeZone,\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    })\n  }\n  return dtfCache[timeZone]\n}\n","import tzTokenizeDate from '../tzTokenizeDate/index.js'\n\nvar MILLISECONDS_IN_HOUR = 3600000\nvar MILLISECONDS_IN_MINUTE = 60000\n\nvar patterns = {\n  timezone: /([Z+-].*)$/,\n  timezoneZ: /^(Z)$/,\n  timezoneHH: /^([+-])(\\d{2})$/,\n  timezoneHHMM: /^([+-])(\\d{2}):?(\\d{2})$/,\n  timezoneIANA: /(UTC|(?:[a-zA-Z]+\\/[a-zA-Z_]+(?:\\/[a-zA-Z_]+)?))$/\n}\n\n// Parse various time zone offset formats to an offset in milliseconds\nexport default function tzParseTimezone(timezoneString, date) {\n  var token\n  var absoluteOffset\n\n  // Z\n  token = patterns.timezoneZ.exec(timezoneString)\n  if (token) {\n    return 0\n  }\n\n  var hours\n\n  // ±hh\n  token = patterns.timezoneHH.exec(timezoneString)\n  if (token) {\n    hours = parseInt(token[2], 10)\n\n    if (!validateTimezone(hours)) {\n      return NaN\n    }\n\n    absoluteOffset = hours * MILLISECONDS_IN_HOUR\n    return token[1] === '+' ? -absoluteOffset : absoluteOffset\n  }\n\n  // ±hh:mm or ±hhmm\n  token = patterns.timezoneHHMM.exec(timezoneString)\n  if (token) {\n    hours = parseInt(token[2], 10)\n    var minutes = parseInt(token[3], 10)\n\n    if (!validateTimezone(hours, minutes)) {\n      return NaN\n    }\n\n    absoluteOffset =\n      hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE\n    return token[1] === '+' ? -absoluteOffset : absoluteOffset\n  }\n\n  // IANA time zone\n  token = patterns.timezoneIANA.exec(timezoneString)\n  if (token) {\n    // var [fYear, fMonth, fDay, fHour, fMinute, fSecond] = tzTokenizeDate(date, timezoneString)\n    var tokens = tzTokenizeDate(date, timezoneString)\n    var asUTC = Date.UTC(\n      tokens[0],\n      tokens[1] - 1,\n      tokens[2],\n      tokens[3],\n      tokens[4],\n      tokens[5]\n    )\n    var timestampWithMsZeroed = date.getTime() - (date.getTime() % 1000)\n    return -(asUTC - timestampWithMsZeroed)\n  }\n\n  return 0\n}\n\nfunction validateTimezone(hours, minutes) {\n  if (minutes != null && (minutes < 0 || minutes > 59)) {\n    return false\n  }\n\n  return true\n}\n","import toInteger from 'date-fns/esm/_lib/toInteger/index.js'\nimport getTimezoneOffsetInMilliseconds from 'date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js'\nimport tzParseTimezone from '../_lib/tzParseTimezone'\n\nvar MILLISECONDS_IN_HOUR = 3600000\nvar MILLISECONDS_IN_MINUTE = 60000\nvar DEFAULT_ADDITIONAL_DIGITS = 2\n\nvar patterns = {\n  dateTimeDelimeter: /[T ]/,\n  plainTime: /:/,\n  timeZoneDelimeter: /[Z ]/i,\n\n  // year tokens\n  YY: /^(\\d{2})$/,\n  YYY: [\n    /^([+-]\\d{2})$/, // 0 additional digits\n    /^([+-]\\d{3})$/, // 1 additional digit\n    /^([+-]\\d{4})$/ // 2 additional digits\n  ],\n  YYYY: /^(\\d{4})/,\n  YYYYY: [\n    /^([+-]\\d{4})/, // 0 additional digits\n    /^([+-]\\d{5})/, // 1 additional digit\n    /^([+-]\\d{6})/ // 2 additional digits\n  ],\n\n  // date tokens\n  MM: /^-(\\d{2})$/,\n  DDD: /^-?(\\d{3})$/,\n  MMDD: /^-?(\\d{2})-?(\\d{2})$/,\n  Www: /^-?W(\\d{2})$/,\n  WwwD: /^-?W(\\d{2})-?(\\d{1})$/,\n\n  HH: /^(\\d{2}([.,]\\d*)?)$/,\n  HHMM: /^(\\d{2}):?(\\d{2}([.,]\\d*)?)$/,\n  HHMMSS: /^(\\d{2}):?(\\d{2}):?(\\d{2}([.,]\\d*)?)$/,\n\n  // timezone tokens (to identify the presence of a tz)\n  timezone: /([Z+-].*| UTC|(?:[a-zA-Z]+\\/[a-zA-Z_]+(?:\\/[a-zA-Z_]+)?))$/\n}\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If an argument is a string, the function tries to parse it.\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n * If the function cannot parse the string or the values are invalid, it returns Invalid Date.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n * All *date-fns* functions will throw `RangeError` if `options.additionalDigits` is not 0, 1, 2 or undefined.\n *\n * @param {Date|String|Number} argument - the value to convert\n * @param {OptionsWithTZ} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @param {String} [options.timeZone=''] - used to specify the IANA time zone offset of a date String.\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = toDate('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * var result = toDate('+02014101', {additionalDigits: 1})\n * //=> Fri Apr 11 2014 00:00:00\n */\nexport default function toDate(argument, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError(\n      '1 argument required, but only ' + arguments.length + ' present'\n    )\n  }\n\n  if (argument === null) {\n    return new Date(NaN)\n  }\n\n  var options = dirtyOptions || {}\n\n  var additionalDigits =\n    options.additionalDigits == null\n      ? DEFAULT_ADDITIONAL_DIGITS\n      : toInteger(options.additionalDigits)\n  if (\n    additionalDigits !== 2 &&\n    additionalDigits !== 1 &&\n    additionalDigits !== 0\n  ) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2')\n  }\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === 'object' &&\n      Object.prototype.toString.call(argument) === '[object Date]')\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime())\n  } else if (\n    typeof argument === 'number' ||\n    Object.prototype.toString.call(argument) === '[object Number]'\n  ) {\n    return new Date(argument)\n  } else if (\n    !(\n      typeof argument === 'string' ||\n      Object.prototype.toString.call(argument) === '[object String]'\n    )\n  ) {\n    return new Date(NaN)\n  }\n\n  var dateStrings = splitDateString(argument)\n\n  var parseYearResult = parseYear(dateStrings.date, additionalDigits)\n  var year = parseYearResult.year\n  var restDateString = parseYearResult.restDateString\n\n  var date = parseDate(restDateString, year)\n\n  if (isNaN(date)) {\n    return new Date(NaN)\n  }\n\n  if (date) {\n    var timestamp = date.getTime()\n    var time = 0\n    var offset\n\n    if (dateStrings.time) {\n      time = parseTime(dateStrings.time)\n\n      if (isNaN(time)) {\n        return new Date(NaN)\n      }\n    }\n\n    if (dateStrings.timezone || options.timeZone) {\n      offset = tzParseTimezone(\n        dateStrings.timezone || options.timeZone,\n        new Date(timestamp + time)\n      )\n      if (isNaN(offset)) {\n        return new Date(NaN)\n      }\n    } else {\n      // get offset accurate to hour in timezones that change offset\n      offset = getTimezoneOffsetInMilliseconds(new Date(timestamp + time))\n      offset = getTimezoneOffsetInMilliseconds(\n        new Date(timestamp + time + offset)\n      )\n    }\n\n    return new Date(timestamp + time + offset)\n  } else {\n    return new Date(NaN)\n  }\n}\n\nfunction splitDateString(dateString) {\n  var dateStrings = {}\n  var array = dateString.split(patterns.dateTimeDelimeter)\n  var timeString\n\n  if (patterns.plainTime.test(array[0])) {\n    dateStrings.date = null\n    timeString = array[0]\n  } else {\n    dateStrings.date = array[0]\n    timeString = array[1]\n    dateStrings.timezone = array[2]\n    if (patterns.timeZoneDelimeter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimeter)[0]\n      timeString = dateString.substr(dateStrings.date.length, dateString.length)\n    }\n  }\n\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString)\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '')\n      dateStrings.timezone = token[1]\n    } else {\n      dateStrings.time = timeString\n    }\n  }\n\n  return dateStrings\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var patternYYY = patterns.YYY[additionalDigits]\n  var patternYYYYY = patterns.YYYYY[additionalDigits]\n\n  var token\n\n  // YYYY or ±YYYYY\n  token = patterns.YYYY.exec(dateString) || patternYYYYY.exec(dateString)\n  if (token) {\n    var yearString = token[1]\n    return {\n      year: parseInt(yearString, 10),\n      restDateString: dateString.slice(yearString.length)\n    }\n  }\n\n  // YY or ±YYY\n  token = patterns.YY.exec(dateString) || patternYYY.exec(dateString)\n  if (token) {\n    var centuryString = token[1]\n    return {\n      year: parseInt(centuryString, 10) * 100,\n      restDateString: dateString.slice(centuryString.length)\n    }\n  }\n\n  // Invalid ISO-formatted year\n  return {\n    year: null\n  }\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) {\n    return null\n  }\n\n  var token\n  var date\n  var month\n  var week\n\n  // YYYY\n  if (dateString.length === 0) {\n    date = new Date(0)\n    date.setUTCFullYear(year)\n    return date\n  }\n\n  // YYYY-MM\n  token = patterns.MM.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    month = parseInt(token[1], 10) - 1\n\n    if (!validateDate(year, month)) {\n      return new Date(NaN)\n    }\n\n    date.setUTCFullYear(year, month)\n    return date\n  }\n\n  // YYYY-DDD or YYYYDDD\n  token = patterns.DDD.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    var dayOfYear = parseInt(token[1], 10)\n\n    if (!validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN)\n    }\n\n    date.setUTCFullYear(year, 0, dayOfYear)\n    return date\n  }\n\n  // yyyy-MM-dd or YYYYMMDD\n  token = patterns.MMDD.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    month = parseInt(token[1], 10) - 1\n    var day = parseInt(token[2], 10)\n\n    if (!validateDate(year, month, day)) {\n      return new Date(NaN)\n    }\n\n    date.setUTCFullYear(year, month, day)\n    return date\n  }\n\n  // YYYY-Www or YYYYWww\n  token = patterns.Www.exec(dateString)\n  if (token) {\n    week = parseInt(token[1], 10) - 1\n\n    if (!validateWeekDate(year, week)) {\n      return new Date(NaN)\n    }\n\n    return dayOfISOWeekYear(year, week)\n  }\n\n  // YYYY-Www-D or YYYYWwwD\n  token = patterns.WwwD.exec(dateString)\n  if (token) {\n    week = parseInt(token[1], 10) - 1\n    var dayOfWeek = parseInt(token[2], 10) - 1\n\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN)\n    }\n\n    return dayOfISOWeekYear(year, week, dayOfWeek)\n  }\n\n  // Invalid ISO-formatted date\n  return null\n}\n\nfunction parseTime(timeString) {\n  var token\n  var hours\n  var minutes\n\n  // hh\n  token = patterns.HH.exec(timeString)\n  if (token) {\n    hours = parseFloat(token[1].replace(',', '.'))\n\n    if (!validateTime(hours)) {\n      return NaN\n    }\n\n    return (hours % 24) * MILLISECONDS_IN_HOUR\n  }\n\n  // hh:mm or hhmm\n  token = patterns.HHMM.exec(timeString)\n  if (token) {\n    hours = parseInt(token[1], 10)\n    minutes = parseFloat(token[2].replace(',', '.'))\n\n    if (!validateTime(hours, minutes)) {\n      return NaN\n    }\n\n    return (\n      (hours % 24) * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE\n    )\n  }\n\n  // hh:mm:ss or hhmmss\n  token = patterns.HHMMSS.exec(timeString)\n  if (token) {\n    hours = parseInt(token[1], 10)\n    minutes = parseInt(token[2], 10)\n    var seconds = parseFloat(token[3].replace(',', '.'))\n\n    if (!validateTime(hours, minutes, seconds)) {\n      return NaN\n    }\n\n    return (\n      (hours % 24) * MILLISECONDS_IN_HOUR +\n      minutes * MILLISECONDS_IN_MINUTE +\n      seconds * 1000\n    )\n  }\n\n  // Invalid ISO-formatted time\n  return null\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  week = week || 0\n  day = day || 0\n  var date = new Date(0)\n  date.setUTCFullYear(isoWeekYear, 0, 4)\n  var fourthOfJanuaryDay = date.getUTCDay() || 7\n  var diff = week * 7 + day + 1 - fourthOfJanuaryDay\n  date.setUTCDate(date.getUTCDate() + diff)\n  return date\n}\n\n// Validation functions\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0)\n}\n\nfunction validateDate(year, month, date) {\n  if (month < 0 || month > 11) {\n    return false\n  }\n\n  if (date != null) {\n    if (date < 1) {\n      return false\n    }\n\n    var isLeapYear = isLeapYearIndex(year)\n    if (isLeapYear && date > DAYS_IN_MONTH_LEAP_YEAR[month]) {\n      return false\n    }\n    if (!isLeapYear && date > DAYS_IN_MONTH[month]) {\n      return false\n    }\n  }\n\n  return true\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  if (dayOfYear < 1) {\n    return false\n  }\n\n  var isLeapYear = isLeapYearIndex(year)\n  if (isLeapYear && dayOfYear > 366) {\n    return false\n  }\n  if (!isLeapYear && dayOfYear > 365) {\n    return false\n  }\n\n  return true\n}\n\nfunction validateWeekDate(year, week, day) {\n  if (week < 0 || week > 52) {\n    return false\n  }\n\n  if (day != null && (day < 0 || day > 6)) {\n    return false\n  }\n\n  return true\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours != null && (hours < 0 || hours >= 25)) {\n    return false\n  }\n\n  if (minutes != null && (minutes < 0 || minutes >= 60)) {\n    return false\n  }\n\n  if (seconds != null && (seconds < 0 || seconds >= 60)) {\n    return false\n  }\n\n  return true\n}\n","import cloneObject from 'date-fns/esm/_lib/cloneObject'\nimport format from 'date-fns/esm/format'\nimport toDate from '../toDate'\n\n/**\n * @name zonedTimeToUtc\n * @category Time Zone Helpers\n * @summary Get the UTC date/time from a date representing local time in a given time zone\n *\n * @description\n * Returns a date instance with the UTC time of the provided date of which the values\n * represented the local time in the time zone specified. In other words, if the input\n * date represented local time in time time zone, the timestamp of the output date will\n * give the equivalent UTC of that local time regardless of the current system time zone.\n *\n * @param {Date|String|Number} date - the date with values representing the local time\n * @param {String} timeZone - the time zone of this local time, can be an offset or IANA time zone\n * @param {OptionsWithTZ} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @returns {Date} the new date with the equivalent time in the time zone\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // In June 10am in Los Angeles is 5pm UTC\n * const result = zonedTimeToUtc(new Date(2014, 5, 25, 10, 0, 0), 'America/Los_Angeles')\n * //=> 2014-06-25T17:00:00.000Z\n */\nexport default function zonedTimeToUtc(date, timeZone, options) {\n  if (date instanceof Date) {\n    date = format(date, \"yyyy-MM-dd'T'HH:mm:ss.SSS\")\n  }\n  var extendedOptions = cloneObject(options)\n  extendedOptions.timeZone = timeZone\n  return toDate(date, extendedOptions)\n}\n","import intlReady from '../../assets/js/intlReady'\nimport { zonedTimeToUtc } from 'date-fns-tz'\n\nconst { Datepicker } = window.beyond\n\nintlReady()\n  .then(() => {\n    document.querySelectorAll('[data-datepicker]')\n      .forEach(dom => new Datepicker(dom, {\n        startDate: zonedTimeToUtc('2018-09-01 18:01:36.386', 'Asia/Taipei'),\n        endDate: zonedTimeToUtc('2018-09-03 18:01:36.386', 'Asia/Taipei')\n      }))\n  })\n","import './codebox'\nimport '../../_includes/demos/tabbox'\nimport '../../_includes/demos/toasts'\nimport '../../_includes/demos/modals'\nimport '../../_includes/demos/autocompletes'\nimport '../../_includes/demos/datepickers'\nimport '../../_includes/demos/tooltips'\nimport '../../_includes/demos/dropdowns'\n\nconst { Codebox, Sidebar } = window.beyond\n\ndocument.querySelectorAll('[data-codebox]')\n  .forEach(dom => new Codebox(dom))\n\nnew Sidebar(document.querySelector('[data-sidebar-opener]'))\n"],"sourceRoot":""}